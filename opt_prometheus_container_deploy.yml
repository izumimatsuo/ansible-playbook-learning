---
- name: prometheus container deploy
  hosts: all
  become: true
  gather_facts: false

  vars:
    prometheus_container_image: "prom/prometheus"
    blackbox_exporter_container_image: "prom/blackbox-exporter"

  pre_tasks:
    - name: check releasever
      ansible.builtin.shell:
        cmd: cat /etc/os-release | grep VERSION_ID | sed -e 's/.*"\(.*\)"/\1/'
      changed_when: false
      failed_when: false
      register: result

    - name: set releasever as fact
      ansible.builtin.set_fact:
        releasever: "{{ result.stdout[0] }}"

    - name: install python-pip packages
      when: releasever != "7"
      ansible.builtin.yum:
        name:
          - python3-pip

    - name: install python-pip (python2)
      when: releasever == "7"
      block:
        - name: fetch pip installer
          ansible.builtin.uri:
            url: https://bootstrap.pypa.io/pip/2.7/get-pip.py
            return_content: true
          register: pip_installer

        - name: run pip installer
          ansible.builtin.command:
            cmd: python
            stdin: "{{ pip_installer.content }}"
          args:
            creates: /usr/bin/pip

  tasks:
    - name: install docker python package
      ansible.builtin.pip:
        name:
          - docker
          - docker-compose

    - name: create conf directory
      ansible.builtin.file:
        path: /etc/prometheus
        state: directory
        owner: root
        group: root
        mode: '0744'

    - name: copy prometheus conf
      ansible.builtin.copy:
        backup: true
        dest: /etc/prometheus/prometheus.yml
        content: |
          global:
            scrape_interval:     15s
            evaluation_interval: 15s

          rule_files:
            - alert_rules.yml

          alerting:
            alertmanagers:
              - scheme: http
                static_configs:
                - targets:
                  - alertmanager:9093

          scrape_configs:
            - job_name: prometheus
              static_configs:
                - targets:
                  - localhost:9090

            - job_name: alertmanager
              static_configs:
                - targets:
                  - alertmanager:9093

            - job_name: blackbox_exporter
              metrics_path: /probe
              static_configs:
                - labels:
                    module: icmp
                  targets:
                    - 192.168.56.11
                    - 192.168.56.12
                - labels:
                    module: http_2xx
                  targets:
                    - 192.168.56.11:9093/metrics
              relabel_configs:
                - source_labels: [module]
                  target_label: __param_module
                - source_labels: [__address__]
                  target_label: __param_target
                - source_labels: [__param_target]
                  target_label: instance
                - target_label: __address__
                  replacement: blackbox_exporter:9115

            - job_name: node_exporter

        owner: root
        group: root
        mode: "0644"
      notify: restart containers

    - name: copy alert rules
      ansible.builtin.copy:
        backup: true
        dest: /etc/prometheus/alert_rules.yml
        content: |
          groups:
          - name: node-exporter
            rules:
            - alert: instance_down
              expr: up == 0
              for: 1m
              labels:
                severity: critical
              annotations:
                summary: "{% raw %}Instance {{ $labels.instance }} down{% endraw %}"
                description: "{% raw %}{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 1 minutes.{% endraw %}"

          - name: blackbox-exporter
            rules:
            - alert: service_down
              expr: probe_success == 0
              for: 1m
              labels:
                severity: critical
              annotations:
                summary: "{% raw %}Service {{ $labels.instance }} down{% endraw %}"
                description: "{% raw %}{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 1 minutes.{% endraw %}"
        owner: root
        group: root
        mode: "0644"
      notify: restart containers

    - name: copy docker-compose file
      ansible.builtin.copy:
        backup: true
        dest: /etc/prometheus/docker-compose.yml
        content: |
          version: '3'

          services:
            prometheus:
              image: "{{ prometheus_container_image }}"
              container_name: prometheus
              volumes:
                - /etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
                - /etc/prometheus/alert_rules.yml:/etc/prometheus/alert_rules.yml
                - prometheus_data:/prometheus
              ports:
                - 9090:9090
              networks:
                - monitoring
              restart: always

            blackbox-exporter:
              image: "{{ blackbox_exporter_container_image }}"
              container_name: blackbox_exporter
              networks:
                - monitoring
              restart: always

          volumes:
            prometheus_data:

          networks:
            monitoring:
              driver: bridge
              internal: false
        owner: root
        group: root
        mode: "0644"
      notify: restart containers

    - name: start containers
      community.docker.docker_compose:
        project_src: /etc/prometheus

  post_tasks:
    - name: verify started prometheus contailner
      ansible.builtin.command:
        cmd: docker container ls
      changed_when: false
      register: result
      failed_when: "'prom/prometheus' not in result.stdout"

    - name: verify started blackbox_exporter contailner
      ansible.builtin.command:
        cmd: docker container ls
      changed_when: false
      register: result
      failed_when: "'prom/blackbox-exporter' not in result.stdout"

  handlers:
    - name: restart containers
      community.docker.docker_compose:
        project_src: /etc/prometheus
        restarted: true
