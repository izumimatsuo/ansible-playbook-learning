---
- name: prometheus container deploy
  hosts: all
  become: true
  gather_facts: false

  vars:
    prometheus_container_image: "prom/prometheus"
    alertmanager_container_image: "prom/alertmanager"
    blackbox_exporter_container_image: "prom/blackbox-exporter"

  pre_tasks:
    - name: fetch pip installer
      ansible.builtin.uri:
        url: https://bootstrap.pypa.io/pip/2.7/get-pip.py
        return_content: true
      register: pip_installer

    - name: run pip installer
      ansible.builtin.command:
        cmd: python
        stdin: "{{ pip_installer.content }}"
      args:
        creates: /usr/bin/pip

    - name: install docker python package
      ansible.builtin.pip:
        name:
          - docker-compose

  tasks:
    - name: create conf directory
      ansible.builtin.file:
        path: /etc/prometheus
        state: directory
        owner: root
        group: root
        mode: '0744'

    - name: copy prometheus conf
      ansible.builtin.copy:
        backup: true
        dest: /etc/prometheus/prometheus.yml
        content: |
          global:
            scrape_interval:     15s
            evaluation_interval: 15s

          rule_files:
            - alert_rules.yml

          alerting:
            alertmanagers:
              - scheme: http
                static_configs:
                - targets:
                  - alertmanager:9093

          scrape_configs:
            - job_name: prometheus
              static_configs:
                - targets:
                  - localhost:9090

            - job_name: node
              static_configs:
                - targets:
                  - 192.168.56.11:9100
        owner: root
        group: root
        mode: "0644"
      notify: restart containers

    - name: copy alertmanager conf
      ansible.builtin.copy:
        backup: true
        dest: /etc/prometheus/alertmanager.yml
        content: |
          global:
            resolve_timeout: 5m
            smtp_from: 'test@example.com'
            smtp_smarthost: 'mail:1025'
            smtp_require_tls: false

          route:
            group_by: ['alertname', 'instance']
            group_wait: 10s
            group_interval: 10s
            repeat_interval: 1h
            receiver: 'mailtest'

          receivers:
            - name: 'mailtest'
              email_configs:
                - to: 'root@localhost.localdomain'
                  send_resolved: true

          inhibit_rules:
            - source_match:
                severity: 'critical'
              target_match:
                severity: 'warning'
              equal: ['alertname']
        owner: root
        group: root
        mode: "0644"
      notify: restart containers

    - name: copy alert rules
      ansible.builtin.copy:
        backup: true
        dest: /etc/prometheus/alert_rules.yml
        content: |
          groups:
          - name: node-exporter
            rules:
            - alert: instance_down
              expr: up == 0
              for: 1m
              labels:
                severity: critical
              annotations:
                summary: "{% raw %}Instance {{ $labels.instance }} down{% endraw %}"
                description: "{% raw %}{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 5 minutes.{% endraw %}"

          - name: blackbox-exporter
            rules:
            - alert: service_down
              expr: probe_success == 0
              for: 2m
              labels:
                severity: critical
              annotations:
                summary: "{% raw %}Service {{ $labels.instance }} down{% endraw %}"
                description: "{% raw %}{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 2 minutes.{% endraw %}"
        owner: root
        group: root
        mode: "0644"
      notify: restart containers

    - name: copy docker-compose file
      ansible.builtin.copy:
        backup: true
        dest: /etc/prometheus/docker-compose.yml
        content: |
          version: '3'

          services:
            prometheus:
              image: "{{ prometheus_container_image }}"
              container_name: prometheus
              volumes:
                - /etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
                - /etc/prometheus/alert_rules.yml:/etc/prometheus/alert_rules.yml
                - prometheus_data:/prometheus
              ports:
                - 9090:9090
              restart: always

            alertmanager:
              image: prom/alertmanager
              container_name: alertmanager
              volumes:
                - /etc/prometheus/alertmanager.yml:/etc/alertmanager/alertmanager.yml
              ports:
                - 9093:9093
              restart: always

                #            blackbox-exporter:
                #              image: prom/blackbox-exporter
                #              container_name: blackbox-exporter
                #              restart: always

            mail:
              image: schickling/mailcatcher
              container_name: mail
              ports:
                - 1025:1025
                - 1080:1080

          volumes:
            prometheus_data:
        owner: root
        group: root
        mode: "0644"
      notify: restart containers

    - name: start containers
      community.docker.docker_compose:
        project_src: /etc/prometheus

  post_tasks:
    - name: verify started postresql contailner
      ansible.builtin.command:
        cmd: docker container ls
      changed_when: false
      register: result
      failed_when: "'prom/prometheus' not in result.stdout"

    - name: verify started alertmanager contailner
      ansible.builtin.command:
        cmd: docker container ls
      changed_when: false
      register: result
      failed_when: "'prom/alertmanager' not in result.stdout"

  handlers:
    - name: restart containers
      community.docker.docker_compose:
        project_src: /etc/prometheus
        restarted: true
