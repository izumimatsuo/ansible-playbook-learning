---
- name: postfix setup
  hosts: all
  become: true
  gather_facts: false

  vars:
    postfix_myhostname: "mail.example.com"
    postfix_mydomain: "{{ postfix_myhostname | regex_replace('^[^\\.]*\\.', '') }}"
    postfix_myorigin: "$mydomain"
    postfix_inet_interfaces: "localhost"
    postfix_inet_protocols: "all"
    postfix_mynetworks: "127.0.0.0/8"

  tasks:
    - name: install postfix package
      ansible.builtin.yum:
        name: postfix

    - name: start postfix service
      ansible.builtin.service:
        name: postfix.service
        state: started
        enabled: true

    - name: copy postfix main conf
      ansible.builtin.lineinfile:
        path: /etc/postfix/main.cf
        regexp: "^{{ item.split(' ')[0] }} "
        insertafter: "^#{{ item.split(' ')[0] }} "
        line: "{{ item }}"
        backup: true
        validate: "postfix check %s"
      loop:
        - myhostname = {{ postfix_myhostname }}
        - mydomain = {{ postfix_mydomain }}
        - myorigin = {{ postfix_myorigin }}
        - mynetworks = {{ postfix_mynetworks }}
        - inet_interfaces = {{ postfix_inet_interfaces }}
        - inet_protocols = {{ postfix_inet_protocols }}
      notify: restart postfix service

  post_tasks:
    - name: verify installed postfix package
      ansible.builtin.shell:
        cmd: set -o pipefail; yum list installed | grep postfix\.
      changed_when: false
      register: result
      failed_when: result.rc != 0

    - name: print installed version
      ansible.builtin.debug:
        var: result.stdout

    - name: verify started postfix service
      ansible.builtin.service:
        name: postfix.service
        state: started
        enabled: true
      check_mode: true
      register: result
      failed_when: result.changed

  handlers:
    - name: restart postfix service
      service:
        name: postfix.service
        state: restarted
