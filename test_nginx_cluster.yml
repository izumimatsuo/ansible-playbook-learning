---
- name: test nginx cluster
  hosts: all
  become: true
  gather_facts: false

  vars:
    cluster_check_proc: 'nginx'
    cluster_check_timeout: 'no'
    cluster_vip: '192.168.56.10'

  pre_tasks:
    - name: check vrrp state
      ansible.builtin.shell:
        cmd: journalctl -u keepalived | grep STATE | tail -n 1
      changed_when: false
      register: vrrp_state

    - name: print vrrp state
      ansible.builtin.debug:
        var: vrrp_state.stdout

    - name: set nginx master node as fact
      ansible.builtin.set_fact:
        nginx_master_node: "{{ true if 'MASTER' in vrrp_state.stdout else false}}"

  tasks:
    - name: stop {{ cluster_check_proc }} service on 'MASTER'
      when: nginx_master_node and 'no' == cluster_check_timeout
      ansible.builtin.command:
        cmd: "/usr/bin/systemctl stop {{ cluster_check_proc }}.service"
      changed_when: false

    - name: hung up {{ cluster_check_proc }} service on 'MASTER'
      when: nginx_master_node and 'yes' == cluster_check_timeout
      ansible.builtin.command:
        cmd: " /usr/bin/pkill -SIGSTOP {{ cluster_check_proc }}"
      changed_when: false

    - name: wait for
      ansible.builtin.pause:
        seconds: 10

    - name: check vrrp state
      ansible.builtin.shell:
        cmd: journalctl -u keepalived | grep STATE | tail -n 1
      changed_when: false
      register: vrrp_state

    - name: print vrrp state
      ansible.builtin.debug:
        var: vrrp_state.stdout

    - name: verify vrrp state 'BACKUP' to 'MASTER'
      when: not nginx_master_node
      ansible.builtin.shell:
        cmd: journalctl -u keepalived | grep STATE | tail -n 1
      changed_when: false
      register: vrrp_state
      failed_when: "'MASTER' not in vrrp_state.stdout "

    - name: verify virtual ip on 'MASTER'
      when: not nginx_master_node
      ansible.builtin.shell:
        cmd: ip address show
      changed_when: false
      register: result
      failed_when: cluster_vip not in result.stdout

  post_tasks:
    - name: restart {{ cluster_check_proc }} service
      when: nginx_master_node
      ansible.builtin.command:
        cmd: "/usr/bin/systemctl restart {{ cluster_check_proc }}.service"
      changed_when: false
