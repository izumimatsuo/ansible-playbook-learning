---
- name: node_exporter install
  hosts: all
  become: true
  gather_facts: false

  vars:
    node_exporter_version: 1.5.0

  tasks:
    - name: create prometheus user
      ansible.builtin.user:
        name: prometheus
        createhome: false
        shell: /sbin/nologin

    - name: download node_exporter '{{ node_exporter_version }}'
      ansible.builtin.unarchive:
        src: https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz
        dest: /tmp
        remote_src: true

    - name: install node_exporter
      ansible.builtin.copy:
        src: /tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter
        dest: /usr/local/bin/node_exporter
        mode: "0755"
        remote_src: true

    - name: copy node_exporter service file
      ansible.builtin.copy:
        backup: true
        dest: /etc/systemd/system/node_exporter.service
        content: |
          [Unit]
          Description=Exporter for machine metrics

          [Service]
          Restart=always
          User=prometheus
          ExecStart=/usr/local/bin/node_exporter
          ExecReload=/bin/kill -HUP $MAINPID
          TimeoutStopSec=20s
          SendSIGKILL=no

          [Install]
          WantedBy=multi-user.target
        owner: root
        group: root
        mode: '0644'

    - name: daemon-reload
      ansible.builtin.systemd:
        daemon_reload: true

    - name: start node_exporter service
      ansible.builtin.service:
        name: node_exporter
        state: started
        enabled: true

  post_tasks:
    - name: verify add 'prometheus' user
      ansible.builtin.user:
        name: prometheus
        createhome: false
        shell: /sbin/nologin
      check_mode: true
      register: result
      failed_when: result.changed

    - name: verify installed 'node_exporter'
      ansible.builtin.stat:
        path: /usr/local/bin/node_exporter
      changed_when: false
      register: result
      failed_when: not result.stat.exists

    - name: verify started 'node_exporter'
      ansible.builtin.service:
        name: node_exporter.service
        state: started
        enabled: true
      check_mode: true
      register: result
      failed_when: result.changed

    - name: verify exporter port '9100'
      ansible.builtin.wait_for:
        port: 9100
        state: started
        timeout: 5
