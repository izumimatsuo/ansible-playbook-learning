---
- name: Do docker swarm configuration
  hosts: all
  become: true
  gather_facts: false

  vars:
    docker_swarm_manager_count: 3
    docker_swarm_manager_hosts: "{{ (ansible_play_hosts | sort)[:docker_swarm_manager_count] }}"
    docker_swarm_leader_host: "{{ docker_swarm_manager_hosts | first }}"
    docker_swarm_advertise_addr: "eth1"

  tasks:
    - name: Check docker info
      ansible.builtin.command:
        cmd: docker info
      changed_when: false
      register: docker_info

    - name: Set docker-swarm inactive as fact
      ansible.builtin.set_fact:
        docker_swarm_inactive: "{{ true if 'Swarm: inactive' in docker_info.stdout else false }}"

    - name: Set docker-swarm manager as fact
      ansible.builtin.set_fact:
        docker_swarm_manager: "{{ true if inventory_hostname in docker_swarm_manager_hosts else false }}"

    - name: Init docker-swarm cluster
      when: docker_swarm_inactive and docker_swarm_leader_host == inventory_hostname
      ansible.builtin.command:
        cmd: docker swarm init --advertise-addr {{ docker_swarm_advertise_addr }}

    - block:
      - name: Get docker-swarm join-token
        ansible.builtin.shell:
          cmd: set -o pipefail; docker swarm join-token {{ 'manager' if docker_swarm_manager else 'worker' }} | grep 'docker swarm join'
        register: docker_swarm_join_token
        delegate_to: "{{ docker_swarm_leader_host }}"
        delegate_facts: true

      - name: Join docker-swarm cluster
        ansible.builtin.command:
          cmd: "{{ docker_swarm_join_token.stdout }}"

      when: docker_swarm_inactive and docker_swarm_leader_host != inventory_hostname

  post_tasks:
    - name: Verify docker-swarm is active
      ansible.builtin.command:
        cmd: docker info
      changed_when: false
      register: result
      failed_when: "'Swarm: active' not in result.stdout"

    - name: Verify docker-swarm-manager
      when: docker_swarm_manager
      ansible.builtin.command:
        cmd: docker node ls
      changed_when: false
      register: result
      failed_when: result.rc != 0

    - name: Print docker-swarm-nodes
      when: inventory_hostname == docker_swarm_leader_host
      ansible.builtin.debug:
        var: result.stdout_lines
